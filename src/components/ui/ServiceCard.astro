---
export interface Props {
  service: {
    icon: string;
    title: string;
    description: string;
    features: string[];
  };
}

const { service } = Astro.props;
---

<div class="service-item">
  <div class="service-icon">
    <img src={service.icon} alt={`${service.title} icon`} />
  </div>
  <h4><span class="highlight">{service.title}</span></h4>
  <p>{service.description}</p>
  <p><strong>Services Include:</strong></p>
  <ul>
    {service.features.map((feature) => <li>{feature}</li>)}
  </ul>
</div>

<style>
  .service-item {
    background: var(--white);
    padding: 2rem;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-light);
    transition: var(--transition);
    border: 1px solid rgba(0, 0, 0, 0.05);
  }

  .service-item .highlight {
    background: none;
    padding: 0;
    border-radius: 0;
    color: var(--text-dark);
  }

  .service-item:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-medium);
  }

  .service-icon {
    margin-bottom: 1.5rem;
  }

  .service-icon img {
    width: 60px;
    height: 60px;
    object-fit: contain;
  }

  .service-item h4 {
    margin-bottom: 1rem;
    color: var(--text-dark);
    position: relative;
    padding: 1rem 0;
  }

  .service-item h4::before,
  .service-item h4::after {
    content: '';
    position: absolute;
    left: 0;
    width: 100%;
    height: 20px;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 300 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0,15 Q150,5 300,15' fill='none' stroke='%23167D80' stroke-width='2'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-size: 100% 100%;
  }

  .service-item h4::before {
    top: 0;
  }

  .service-item h4::after {
    bottom: 0;
  }

  .service-item p {
    margin-bottom: 1rem;
  }

  .service-item ul {
    margin-top: 1rem;
    padding-left: 1.2rem;
  }

  .service-item li {
    margin-bottom: 0.5rem;
    color: var(--text-light);
  }
</style>